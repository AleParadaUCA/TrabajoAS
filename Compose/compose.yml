version: '3.1'

services:
  nginx:
    image: nginx:latest
    container_name: prod_nginx
    volumes:
      - ./vol/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./vol/app:/var/www/html
    ports:
      - "8080:80"
    networks:
      production_net:
        ipv4_address: 172.30.0.10
  php:
    image: php:8.2-fpm
    container_name: prod_php
    volumes:
      - ./vol/app:/var/www/html
    networks:
      production_net:
        ipv4_address: 172.30.0.12
    command: >
      sh -c "apt-get update && apt-get install -y libpq-dev &&
             docker-php-ext-install pdo pdo_pgsql &&
             docker-php-entrypoint php-fpm"

  postgres_prod:
    image: postgres:14
    container_name: prod_postgres
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_USER: postgres
      POSTGRES_DB: testdb
    volumes:
      - ./vol/postgres_data:/var/lib/postgresql/data
    networks:
      production_net:
        ipv4_address: 172.30.0.11
      services_net:
        ipv4_address: 172.20.0.11

  apache:
    image: php:7.4-apache
    container_name: dev_webapi
    volumes:
      - ./vol/html:/var/www/html
    ports:
      - "8081:80"
    networks:
      development_net:
        ipv4_address: 172.40.0.10
    command: >
      sh -c "apt-get update && apt-get install -y libpq-dev dnsutils && 
      docker-php-ext-install pdo pdo_mysql && 
      docker-php-entrypoint apache2-foreground"
    #las dnsutils solo son para comporbar el dns

  mysql:
    image: mysql:5.7
    container_name: dev_mysql
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
    volumes:
      - ./vol/mysql_data:/var/lib/mysql
    networks:
      development_net:
        ipv4_address: 172.40.0.11

#################################################################

  dns:
    image: ubuntu/bind9:latest 
    container_name: dns_nas_services
    user: bind:bind  # Ejecutar como usuario bind
    networks:
      services_net:
        ipv4_address: 172.20.0.10
    volumes:
      - ./vol/bind:/etc/bind
      - ./vol/cache:/var/cache/bind
      - ./vol/run/named:/var/run/named 
    ports:
      - '53:53/udp'
      - '53:53/tcp'
    environment:
      - TZ=UTC+2
    # healthcheck:  #compribar que funciona el dns
    #   test: ["CMD", "named-checkconf", "/etc/bind/named.conf"]
    #   interval: 30s
    #   timeout: 5s
    #   retries: 3

  nas:
    image: debian:latest
    container_name: nas_services
    networks:
      - services_net
      - development_net
    volumes:
      - ./vol/backups:/backups
    entrypoint: >
      /bin/sh -c "apt update &&
                  apt install -y rsync default-mysql-client postgresql-client nano cron &&
                  echo '0 3 * * * /bin/bash /backups/backup.sh' > /etc/cron.d/dailyjob &&
                  chmod 0644 /etc/cron.d/dailyjob &&
                  crontab /etc/cron.d/dailyjob &&
                  cron -f"
    environment:
      - TZ=UTC+2

#################################################################


networks:
  production_net:
    driver: bridge
    # driver_opts:
    #   parent: "ens20"
    ipam:
      config:
       -  subnet: 172.30.0.0/24
          gateway: 172.30.0.1
  services_net:
    driver: bridge
    # driver_opts:
    #   parent: "ens19"
    ipam:
      config:
       -  subnet: 172.20.0.0/24
          gateway: 172.20.0.1
  development_net:
    # driver_opts:
    #   parent: "ens21"
    driver: bridge
    ipam:
      config:
       -  subnet: 172.40.0.0/24
          gateway: 172.40.0.1
          