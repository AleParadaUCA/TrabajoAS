services:
#   nginx:
#     image: nginx:latest
#     container_name: prod_nginx
#     volumes:
#       - ./P0/nginx.conf:/etc/nginx/nginx.conf:ro
#       - ./P0/app:/var/www/html
#     networks:
#       production_net:
#         ipv4_address: 172.30.0.10
#     dns: 172.20.0.10

#   php:
#     build:
#       dockerfile: ./P0/php.Dockerfile
#     container_name: prod_php
#     volumes:
#       - ./P0/app:/var/www/html
#     networks:
#       production_net:
#         ipv4_address: 172.30.0.12
#     dns: 172.20.0.10

#   postgres_prod:
#     image: postgres:14
#     container_name: prod_postgres
#     environment:
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_DB: ${POSTGRES_DB}
#     volumes:
#       - ./P0/postgres_data:/var/lib/postgresql/data
#     networks:
#       production_net:
#         ipv4_address: 172.30.0.11
#     dns: 172.20.0.10

# #################################################################

#   apache:
#     build:
#         dockerfile: ./P0/apache.Dockerfile
#     container_name: dev_webapi
#     volumes:
#       - ./P0/html:/var/www/html
#     networks:
#       development_net:
#         ipv4_address: 172.40.0.10
#     dns: 172.20.0.10

#   mysql:
#     image: mysql:5.7
#     container_name: dev_mysql
#     environment:
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#       MYSQL_DATABASE: ${MYSQL_DATABASE}
#       MYSQL_USER: ${MYSQL_USER}
#       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#     volumes:
#       - ./P0/mysql_data:/var/lib/mysql
#     networks:
#       development_net:
#         ipv4_address: 172.40.0.11
#     dns: 172.20.0.10

#   ssh_dev:
#     build:
#         dockerfile: ./P1/ssh_dev.Dockerfile
#     container_name: dev_ssh
#     volumes:
#       - ./P1/ssh_dev/sshd_config:/etc/ssh/sshd_config
#       - ./P1/ssh_dev/home:/home
#       - ./P1/ssh_dev/sshd-pam:/etc/pam.d/sshd
#     networks:
#       development_net:
#         ipv4_address: 172.40.0.20
#     dns: 172.20.0.10

#   ftp:
#       build:
#         dockerfile: ./P2/ftp.Dockerfile
#       container_name: ftp_publico
#       volumes:
#         - ./P2/samba/publico:/home/publico:ro
#       networks:
#         development_net:
#           ipv4_address: 172.40.0.40
#       dns: 172.20.0.10

#   samba:
#     image: dperson/samba
#     container_name: samba_services
#     volumes:  
#       - ./P2/samba/desarrollo:/mnt/desarrollo
#       - ./P2/samba/revision:/mnt/revision
#       - ./P2/samba/publico:/mnt/publico
#       - ./P2/samba/init_samba.sh:/init_samba.sh
#     networks:
#       development_net:
#         ipv4_address: 172.40.0.30
#     dns: 172.20.0.10
#     command: bash /init_samba.sh

  apache_servers:
    image: httpd:latest
    container_name: apache_server
    ports:
      - "8082:80"
    volumes:
      - ./P2/samba/publico:/usr/local/apache2/mmt/ftp/publico:ro  
      - ./P3/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./P3/index.html:/usr/local/apache2/htdocs/index.html
      - ./P3/start.sh:/start.sh
    networks:
      development_net:
        ipv4_address: 172.40.0.50
    dns: 172.20.0.10
    command: ["/./start.sh"]

#################################################################

  # dns:
  #   image: ubuntu/bind9:latest 
  #   container_name: dns_services
  #   networks:
  #     services_net:
  #       ipv4_address: 172.20.0.10
  #   volumes:
  #     - ./P0/dns/bind:/etc/bind
  #     - ./P0/dns/named:/var/run/named

  # nas:
  #   build:
  #     dockerfile: ./P0/nas.Dockerfile
  #   container_name: nas_services
  #   networks:
  #     services_net:
  #       ipv4_address: 172.20.0.12
  #   volumes:
  #     - ./P0/backups:/backups
  #   dns: 172.20.0.10

  # ssh_ser:
  #   build:
  #       dockerfile: ./P1/ssh_ser.Dockerfile
  #   container_name: ssh_services
  #   volumes:
  #     - ./P1/ssh_ser/sshd_config:/etc/ssh/sshd_config
  #     - ./P1/ssh_ser/home:/home
  #   networks:
  #     services_net:
  #       ipv4_address: 172.20.0.20
  #   dns: 172.20.0.10

#################################################################

networks:
  production_net:
    driver: bridge
    # driver_opts:
    #   parent: "ens20"
    ipam:
      config:
       -  subnet: 172.30.0.0/24
          gateway: 172.30.0.1
  services_net:
    driver: bridge
    # driver_opts:
    #   parent: "ens19"
    ipam:
      config:
       -  subnet: 172.20.0.0/24
          gateway: 172.20.0.1
  development_net:
    driver: bridge
    # driver_opts:
    #   parent: "ens21"
    ipam:
      config:
       -  subnet: 172.40.0.0/24